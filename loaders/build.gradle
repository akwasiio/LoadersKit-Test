plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}

android {
    namespace 'io.eyram.loaders'
    compileSdk 33

    defaultConfig {
        minSdk 22
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        versionName findProperty("VERSION_NAME")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        //https://developer.android.com/jetpack/androidx/releases/compose-kotlin
        kotlinCompilerExtensionVersion '1.4.7'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    //Compose BOM
    implementation platform('androidx.compose:compose-bom:2023.05.00')
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.ui:ui-tooling-preview:"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}


def ossrhUsername = findProperty("OSSRH_USERNAME")
def ossrhPassword = findProperty("OSSRH_PASSWORD")
def signingKeyId = findProperty("SIGNING_KEY_ID")
def signingKey = findProperty("SIGNING_KEY")
def signingKeyPassphrase = findProperty("SIGNING_KEY_PASSPHRASE")
def VERSION = '1.9-SNAPSHOT'


task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = group
                artifactId = "loaderskit"
                version = VERSION

                pom {
                    name = artifactId
                    description = "Loaders Kit Android"
                    url = "https://github.com/nouvell/loaderskit"
                    licenses {
                        license {
                            name = "MIT License"
                            url = "http://www.opensource.org/licenses/mit-license.php"
                        }
                    }
                    developers {
                        developer {
                            id = "being-eyram"
                            name = "Eyram Hlorgbe"
                            email = "eyrammichael@gmail.com"
                        }
                    }
                    scm {
                        connection = "scm:git:git:github.com/Nouvell/Loaderskit-Test.git"
                        developerConnection = "git@github.com:Nouvell/LoadersKit-Test.git"
                        url = "https://github.com/Nouvell/LoadersKit-Test.git"
                    }
                }
            }
        }

        repositories {
            maven {
                name = "sonatype"
                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = VERSION.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

                println(version)

                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(signingKeyId, signingKey, signingKeyPassphrase)
    sign publishing.publications
}
